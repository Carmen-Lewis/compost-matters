{
  "version": 3,
  "sources": ["../../../../../../../Users/carmenlewis/Documents/sybrand park/composting/composting-page/netlify/functions/gcal-snapshot.js"],
  "sourceRoot": "/private/var/folders/xj/82mfqh8j5tj993nk1p_6ghzh0000gn/T/tmp-36260-DT4gu0Lzeuei",
  "sourcesContent": ["// netlify/functions/gcal-snapshot.js\nexports.handler = async function () {\n  const key = (process.env.GCAL_API_KEY || '').trim();\n  console.log('[gcal] key prefix:', key.slice(0,6));  // e.g., \"AIzaSy\"\n  const cal = process.env.GCAL_ID;\n\n  if (!key || !cal) {\n    console.error('Missing env', { hasKey: !!key, hasCal: !!cal });\n    return { statusCode: 500, body: 'Missing GCAL_API_KEY or GCAL_ID' };\n  }\n\n  const base = `https://www.googleapis.com/calendar/v3/calendars/${encodeURIComponent(cal)}/events`;\n  const nowISO = new Date().toISOString();\n\n  const qs = (params) => new URLSearchParams(params).toString();\n\n  const call = async (params) => {\n    const url = `${base}?${qs({ key, singleEvents: 'true', orderBy: 'startTime', ...params })}`;\n    const r = await fetch(url);\n    if (!r.ok) {\n      const text = await r.text();\n      console.error('Calendar fetch failed', r.status, text);\n      throw new Error(`Calendar fetch failed: ${r.status}`);\n    }\n    return r.json();\n  };\n\n  const simplify = (ev) => ({\n    id: ev.id,\n    summary: ev.summary || '',\n    location: ev.location || '',\n    description: ev.description || '',\n    start: ev.start?.dateTime || ev.start?.date || null,\n    end: ev.end?.dateTime || ev.end?.date || null,\n    htmlLink: ev.htmlLink || null,\n  });\n\n  try {\n    const upcoming = await call({ timeMin: nowISO, maxResults: 1 });\n    const next = (upcoming.items && upcoming.items[0]) ? simplify(upcoming.items[0]) : null;\n\n    const pastBatch = await call({ timeMax: nowISO, maxResults: 50 });\n    const past = (pastBatch.items || [])\n      .map(simplify)\n      .sort((a, b) => new Date(a.start) - new Date(b.start))\n      .filter(e => (e.end ? new Date(e.end) <= new Date(nowISO) : new Date(e.start) <= new Date(nowISO)))\n      .slice(-2)\n      .reverse();\n\n    return {\n      statusCode: 200,\n      headers: { 'Content-Type': 'application/json', 'Cache-Control': 'public, max-age=300' },\n      body: JSON.stringify({ next, past }),\n    };\n  } catch (e) {\n    console.error('Function error', e);\n    return { statusCode: 502, body: 'Bad gateway' };\n  }\n};"],
  "mappings": ";AACA,QAAQ,UAAU,iBAAkB;AAClC,QAAM,OAAO,QAAQ,IAAI,gBAAgB,IAAI,KAAK;AAClD,UAAQ,IAAI,sBAAsB,IAAI,MAAM,GAAE,CAAC,CAAC;AAChD,QAAM,MAAM,QAAQ,IAAI;AAExB,MAAI,CAAC,OAAO,CAAC,KAAK;AAChB,YAAQ,MAAM,eAAe,EAAE,QAAQ,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC,IAAI,CAAC;AAC7D,WAAO,EAAE,YAAY,KAAK,MAAM,kCAAkC;AAAA,EACpE;AAEA,QAAM,OAAO,oDAAoD,mBAAmB,GAAG,CAAC;AACxF,QAAM,UAAS,oBAAI,KAAK,GAAE,YAAY;AAEtC,QAAM,KAAK,CAAC,WAAW,IAAI,gBAAgB,MAAM,EAAE,SAAS;AAE5D,QAAM,OAAO,OAAO,WAAW;AAC7B,UAAM,MAAM,GAAG,IAAI,IAAI,GAAG,EAAE,KAAK,cAAc,QAAQ,SAAS,aAAa,GAAG,OAAO,CAAC,CAAC;AACzF,UAAM,IAAI,MAAM,MAAM,GAAG;AACzB,QAAI,CAAC,EAAE,IAAI;AACT,YAAM,OAAO,MAAM,EAAE,KAAK;AAC1B,cAAQ,MAAM,yBAAyB,EAAE,QAAQ,IAAI;AACrD,YAAM,IAAI,MAAM,0BAA0B,EAAE,MAAM,EAAE;AAAA,IACtD;AACA,WAAO,EAAE,KAAK;AAAA,EAChB;AAEA,QAAM,WAAW,CAAC,QAAQ;AAAA,IACxB,IAAI,GAAG;AAAA,IACP,SAAS,GAAG,WAAW;AAAA,IACvB,UAAU,GAAG,YAAY;AAAA,IACzB,aAAa,GAAG,eAAe;AAAA,IAC/B,OAAO,GAAG,OAAO,YAAY,GAAG,OAAO,QAAQ;AAAA,IAC/C,KAAK,GAAG,KAAK,YAAY,GAAG,KAAK,QAAQ;AAAA,IACzC,UAAU,GAAG,YAAY;AAAA,EAC3B;AAEA,MAAI;AACF,UAAM,WAAW,MAAM,KAAK,EAAE,SAAS,QAAQ,YAAY,EAAE,CAAC;AAC9D,UAAM,OAAQ,SAAS,SAAS,SAAS,MAAM,CAAC,IAAK,SAAS,SAAS,MAAM,CAAC,CAAC,IAAI;AAEnF,UAAM,YAAY,MAAM,KAAK,EAAE,SAAS,QAAQ,YAAY,GAAG,CAAC;AAChE,UAAM,QAAQ,UAAU,SAAS,CAAC,GAC/B,IAAI,QAAQ,EACZ,KAAK,CAAC,GAAG,MAAM,IAAI,KAAK,EAAE,KAAK,IAAI,IAAI,KAAK,EAAE,KAAK,CAAC,EACpD,OAAO,OAAM,EAAE,MAAM,IAAI,KAAK,EAAE,GAAG,KAAK,IAAI,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE,KAAK,KAAK,IAAI,KAAK,MAAM,CAAE,EACjG,MAAM,EAAE,EACR,QAAQ;AAEX,WAAO;AAAA,MACL,YAAY;AAAA,MACZ,SAAS,EAAE,gBAAgB,oBAAoB,iBAAiB,sBAAsB;AAAA,MACtF,MAAM,KAAK,UAAU,EAAE,MAAM,KAAK,CAAC;AAAA,IACrC;AAAA,EACF,SAAS,GAAG;AACV,YAAQ,MAAM,kBAAkB,CAAC;AACjC,WAAO,EAAE,YAAY,KAAK,MAAM,cAAc;AAAA,EAChD;AACF;",
  "names": []
}
